###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        09/Jun/2019  18:13:08
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootDrv\src\MAX5478.c
#    Command line =  
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootDrv\src\MAX5478.c
#        -lcN
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\List\
#        -lb
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\List\
#        -o
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "E:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\BootApp\inc\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\BootDrv\inc\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\BootOth\inc\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\..\Libraries\CMSIS\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\ascii\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\include\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\modbus_port\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\rtu\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\tcp\
#        -On -I "E:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\List\MAX5478.lst
#    Object file  =  
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\Obj\MAX5478.o
#
###############################################################################

F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootDrv\src\MAX5478.c
      1          /**
      2            ******************************************************************************
      3            * @file    MAX5478.c  burn in system
      4            * @author  h&h
      5            * @version 
      6            * @date    2018
      7            * @brief   MAX5478 driver
      8            ******************************************************************************
      9          **/ 
     10          
     11          
     12          
     13          
     14          #include "include.h"
     15          
     16          #define MAX5478_IIC_PORT I2C1
     17          #define MAX5478_ADDR     0x50
     18          
     19          /*
     20          WIPER A_ONLY
     21          0 1 0 1 A2 A1 A0 0 0 0 0 1 0 0 0 1 D7 D6 D5 D4 D3 D2 D1 D0
     22          0 1 0 1 A2 A1 A0 0 0 0 1 0 0 0 0 1 D7 D6 D5 D4 D3 D2 D1 D0
     23          0 1 0 1 A2 A1 A0 0 0 1 1 0 0 0 0 1 D7 D6 D5 D4 D3 D2 D1 D0
     24          0 1 0 1 A2 A1 A0 0 0 1 0 1 0 0 0 1 D7 D6 D5 D4 D3 D2 D1 D0
     25          */
     26          #define CMD_A_VREG              0x11
     27          #define CMD_A_NVREG             0x21
     28          #define CMD_A_NVREGxVREG        0x61
     29          #define CMD_A_VREGxNVREG        0x51
     30          /*
     31          WIPER B ONLY
     32          0 1 0 1 A2 A1 A0 0 0 0 0 1 0 0 1 0 D7 D6 D5 D4 D3 D2 D1 D0
     33          0 1 0 1 A2 A1 A0 0 0 0 1 0 0 0 1 0 D7 D6 D5 D4 D3 D2 D1 D0
     34          0 1 0 1 A2 A1 A0 0 0 1 1 0 0 0 1 0 D7 D6 D5 D4 D3 D2 D1 D0
     35          0 1 0 1 A2 A1 A0 0 0 1 0 1 0 0 1 0 D7 D6 D5 D4 D3 D2 D1 D0
     36          */
     37          #define CMD_B_VREG              0x12
     38          #define CMD_B_NVREG             0x22
     39          #define CMD_B_NVREGxVREG        0x62
     40          #define CMD_B_VREGxNVREG        0x52
     41          /*
     42          WIPERS A AND B
     43          0 1 0 1 A2 A1 A0 0 0 0 0 1 0 0 1 1 D7 D6 D5 D4 D3 D2 D1 D0
     44          0 1 0 1 A2 A1 A0 0 0 0 1 0 0 0 1 1 D7 D6 D5 D4 D3 D2 D1 D0
     45          0 1 0 1 A2 A1 A0 0 0 1 1 0 0 0 1 1 D7 D6 D5 D4 D3 D2 D1 D0
     46          0 1 0 1 A2 A1 A0 0 0 1 0 1 0 0 1 1 D7 D6 D5 D4 D3 D2 D1 D0
     47          */
     48          #define CMD_A_B_VREG            0x13
     49          #define CMD_A_B_NVREG           0x23
     50          #define CMD_A_B_NVREGxVREG      0x63
     51          #define CMD_A_B_VREGxNVREG      0x53
     52          
     53          #define MAX5478_MAX 0x14u
     54          #define MAX5478_MIN 0x04u
     55          
     56          
     57          
     58          
     59          
     60          void MAX5478_init(void)
     61          {
     62              uint8_t ret = ERROR;
     63              uint8_t DataToWrite = 0xFF;
     64              ret = I2c_command_write(MAX5478_IIC_PORT, CMD_A_VREG,1,MAX5478_ADDR,&DataToWrite);
     65          }
     66          
     67          uint8_t MAX5478_write_potentiometer(uint8_t value)
     68          {
     69              uint8_t ret = ERROR;
     70              
     71              if(value > MAX5478_MAX)
     72                  value = MAX5478_MAX;
     73              if(value < MAX5478_MIN)
     74                  value = MAX5478_MIN;
     75                  
     76              uint8_t DataToWrite = value;
     77              ret = I2c_command_write(MAX5478_IIC_PORT, CMD_A_VREG,1,MAX5478_ADDR,&DataToWrite);
     78              return ret;
     79          }
     80          
     81          
     82          /******************* (C) COPYRIGHT 2018 *****END OF FILE****/
     83          
     84          
     85          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   MAX5478_init
        16   -> I2c_command_write
      24   MAX5478_write_potentiometer
        24   -> I2c_command_write


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      30  MAX5478_init
      56  MAX5478_write_potentiometer

 
 90 bytes in section .text
 
 90 bytes of CODE memory

Errors: none
Warnings: 3
