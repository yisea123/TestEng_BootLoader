###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        03/Nov/2019  11:14:51
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootApp\src\BootApp_HandleCmd.c
#    Command line =  
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootApp\src\BootApp_HandleCmd.c
#        -lcN
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\List\
#        -lb
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\List\
#        -o
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\BootApp\inc\
#        -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\BootDrv\inc\
#        -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\BootOth\inc\
#        -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\..\Libraries\CMSIS\
#        -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\ascii\
#        -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\include\
#        -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\modbus_port\
#        -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\rtu\
#        -I
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\tcp\
#        -On -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\List\BootApp_HandleCmd.lst
#    Object file  =  
#        D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\Obj\BootApp_HandleCmd.o
#
###############################################################################

D:\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootApp\src\BootApp_HandleCmd.c
      1          /*<BASDKey>
      2           **********************************************************************************************************************
      3           *
      4           * COPYRIGHT RESERVED, FeedLiTech, 2019. All rights reserved.
      5           * The reproduction, distribution and utilization of this document as well as the communication of its contents to
      6           * others without explicit authorization is prohibited. Offenders will be held liable for the payment of damages.
      7           * All rights reserved in the event of the grant of a patent, utility model or design.
      8           *
      9           **********************************************************************************************************************
     10          </BASDKey>*/
     11          
     12          #include "BootApp_Cfg.h"
     13          #include "BootApp_Cfg_Board.h"
     14          #include "BootApp_Type.h"
     15          #include "BootApp_Priv.h"
     16          
     17          BootApp_CommunicationBuffer_tun BootApp_CommunicationBuffer_un = {{0},};
     18          BootApp_StatusBuffer_tun StatusBuffer_un = {{FW_MAIN_VERSION,FW_SUB_VERSION,FW_REVISION,},};
     19          
     20          
     21          #if (BOOTAPP_BOARD_SUPPORT == TestEng_Debug)
     22          
     23          void BootApp_HandleCmd_Receive(void)
     24          {
     25          
     26          }
     27          
     28          void BootApp_HandleCmd_Send(void)
     29          {
     30          
     31          }
     32          
     33          void BootApp_Get_CommunicationBuf(BootApp_CommunicationBuffer_tst ** ComBuffer_pst)
     34          {
     35              *ComBuffer_pst = &BootApp_CommunicationBuffer_un.com_st;
     36          }
     37          
     38          void BootApp_Get_StatusBuf(BootApp_StsBuffer_tst ** stsBuffer_pst)
     39          {
     40              *stsBuffer_pst = &StatusBuffer_un.sts_st;
     41          }
     42          
     43          #else
     44          
     45          static void BootApp_CopyFromMb(void);
     46          static void BootApp_SendToMb(void);
     47          
     48          
     49          void BootApp_HandleCmd_Receive(void)
     50          {
     51              eMBPoll();
     52              BootApp_CopyFromMb();
     53          }
     54          
     55          void BootApp_HandleCmd_Send(void)
     56          {
     57              BootApp_SendToMb();
     58              eMBPoll();
     59          }
     60          
     61          void BootApp_CopyFromMb(void)
     62          {
     63              eReadMBRegHolding( &BootApp_CommunicationBuffer_un.buf_au16[0], 0, BOOTAPP_COMMUBICATION_BUF_SIZE);
     64          }
     65          
     66          
     67          void BootApp_SendToMb(void)
     68          {
     69              eWriteMBRegInput(&StatusBuffer_un.buf_au16[8], 8, BOOTAPP_STATUS_BUF_SIZE-8);
     70          }
     71          
     72          void BootApp_Get_CommunicationBuf(BootApp_CommunicationBuffer_tst ** ComBuffer_pst)
     73          {
     74              *ComBuffer_pst = &BootApp_CommunicationBuffer_un.com_st;
     75          }
     76          
     77          void BootApp_Get_StatusBuf(BootApp_StsBuffer_tst ** stsBuffer_pst)
     78          {
     79              *stsBuffer_pst = &StatusBuffer_un.sts_st;
     80          }
     81          
     82          #endif
     83          /*<BASDKey>
     84           ***********************************************************************************************************************
     85           * $History___:
     86           *
     87           * U1.0.0;      20.05.2019 new created for BootLoader he.huang@feedlitech.com
     88           *
     89           * $
     90           ***********************************************************************************************************************
     91          </BASDKey>*/
     92          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   BootApp_CopyFromMb
         8   -> eReadMBRegHolding
       0   BootApp_Get_CommunicationBuf
       0   BootApp_Get_StatusBuf
       8   BootApp_HandleCmd_Receive
         8   -> BootApp_CopyFromMb
         8   -> eMBPoll
       8   BootApp_HandleCmd_Send
         8   -> BootApp_SendToMb
         8   -> eMBPoll
       8   BootApp_SendToMb
         8   -> eWriteMBRegInput


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
     512  BootApp_CommunicationBuffer_un
      16  BootApp_CopyFromMb
       6  BootApp_Get_CommunicationBuf
       6  BootApp_Get_StatusBuf
      12  BootApp_HandleCmd_Receive
      12  BootApp_HandleCmd_Send
      14  BootApp_SendToMb
     256  StatusBuffer_un

 
 512 bytes in section .bss
 256 bytes in section .data
  78 bytes in section .text
 
  78 bytes of CODE memory
 768 bytes of DATA memory

Errors: none
Warnings: none
