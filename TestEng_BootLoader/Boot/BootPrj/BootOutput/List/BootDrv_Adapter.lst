###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        09/Jun/2019  21:46:05
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootApp\src\BootDrv_Adapter.c
#    Command line =  
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootApp\src\BootDrv_Adapter.c
#        -lcN
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\List\
#        -lb
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\List\
#        -o
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "E:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\BootApp\inc\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\BootDrv\inc\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\BootOth\inc\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\..\Libraries\CMSIS\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\ascii\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\include\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\modbus_port\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\rtu\
#        -I
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\..\modbus\tcp\
#        -On -I "E:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\List\BootDrv_Adapter.lst
#    Object file  =  
#        F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootPrj\BootOutput\Obj\BootDrv_Adapter.o
#
###############################################################################

F:\FLT\GitHub\TestEng_BootLoader\TestEng_BootLoader\Boot\BootApp\src\BootDrv_Adapter.c
      1          /*<BASDKey>
      2           **********************************************************************************************************************
      3           *
      4           * COPYRIGHT RESERVED, FeedLiTech, 2019. All rights reserved.
      5           * The reproduction, distribution and utilization of this document as well as the communication of its contents to
      6           * others without explicit authorization is prohibited. Offenders will be held liable for the payment of damages.
      7           * All rights reserved in the event of the grant of a patent, utility model or design.
      8           *
      9           **********************************************************************************************************************
     10          </BASDKey>*/
     11          
     12          #include "BootApp_Cfg.h"
     13          #include "BootApp_Cfg_Board.h"
     14          #include "BootApp_Type.h"
     15          #include "BootApp_Priv.h"
     16          
     17          #if (BOOTAPP_BOARD_SUPPORT == TestEng_Debug)
     18          void BootDrv_Reset(void)
     19          {
     20          
     21          }
     22          
     23          uint8_t BootDrv_EreaseFlash(uint32_t str_addr, uint32_t sect_siz)
     24          {
     25              return 1;
     26          }
     27          
     28          uint8_t BootDrv_ProgramFlash(uint32_t start_addr_u32, uint32_t end_addr_u32, uint32_t length_u32)
     29          {
     30              return 1;
     31          }
     32          
     33          #else
     34          
     35          void BootDrv_Reset(void)
     36          {
     37              __set_FAULTMASK(1);
     38              NVIC_SystemReset();
     39          }
     40          
     41          uint8_t BootDrv_EreaseFlash(uint32_t str_addr, uint32_t sect_siz)
     42          {
     43              uint8_t ret;
     44              
     45              FLASH_Status sts;
     46              if( (str_addr >= BOOTAPP_APP_START_ADDR) &&
     47                  (str_addr < BOOTAPP_APP_END_ADDR) )
     48              {
     49                  BootApp_Enter_Schm();
     50                  FLASH_Unlock();
     51                  str_addr &= BOOTAPP_APP_SECTOR_SIZE;
     52                  sts = FLASH_ErasePage(str_addr);
     53                  FLASH_Lock();
     54                  BootApp_Exit_Schm();
     55          
     56                  if(FLASH_COMPLETE == sts)
     57                  {
     58                      ret = 1;
     59                  }
     60                  else
     61                  {
     62                      ret = 0;
     63                  }
     64              }
     65              else
     66              {
     67                  ret = 0;
     68              }
     69              return ret;
     70          }
     71          
     72          uint8_t BootDrv_ProgramFlash(uint32_t start_addr_u32, uint32_t end_addr_u32, uint32_t length_u32)
     73          {
     74              return 1;
     75          }
     76          
     77          
     78          #endif
     79          
     80          
     81          /*<BASDKey>
     82           ***********************************************************************************************************************
     83           * $History___:
     84           *
     85           * U1.0.0;      20.05.2019 new created for BootLoader he.huang@feedlitech.com
     86           *
     87           * $
     88           ***********************************************************************************************************************
     89          </BASDKey>*/
     90          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   BootDrv_EreaseFlash
        24   -> FLASH_ErasePage
        24   -> FLASH_Lock
        24   -> FLASH_Unlock
       0   BootDrv_ProgramFlash
       8   BootDrv_Reset
         8   -> NVIC_SystemReset
       0   NVIC_SystemReset


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
      70  BootDrv_EreaseFlash
       6  BootDrv_ProgramFlash
      14  BootDrv_Reset
      26  NVIC_SystemReset

 
 132 bytes in section .text
 
 132 bytes of CODE memory

Errors: none
Warnings: none
